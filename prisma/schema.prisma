// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id        Int      @id @default(autoincrement())
  nome      String
  email     String   @unique
  cpf       String   @unique
  telefone  String
  pedidos   Order[]
}

model Coffee {
  id           Int          @id @default(autoincrement())
  nome         String
  tipo         String
  precoUnitario Float
  descricao    String
  tags         String[]     
  itensPedido  ItemOrder[]
}

model Order {
  id            Int          @id @default(autoincrement())
  clienteId     Int
  cliente       Client      @relation(fields: [clienteId], references: [id])
  dataPedido    DateTime     @default(now())
  total         Float
  entrega       Delivery?
  itensPedido   ItemOrder[]
}

model ItemOrder {
  id             Int       @id @default(autoincrement())
  cafeId         Int
  pedidoId       Int
  quantidade     Int
  precoUnitario  Float

  cafe           Coffee      @relation(fields: [cafeId], references: [id])
  pedido         Order    @relation(fields: [pedidoId], references: [id])

  @@unique([cafeId, pedidoId])
}

model Delivery {
  id                   Int       @id @default(autoincrement())
  endereco             String
  status               DeliveryStatus
  dataPrevistaEntrega  DateTime
  pedidoId             Int       @unique
  pedido               Order    @relation(fields: [pedidoId], references: [id])
}

enum DeliveryStatus {
  PENDENTE
  EM_TRANSITO
  ENTREGUE
}